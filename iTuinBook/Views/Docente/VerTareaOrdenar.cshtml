@using iTuinBook.Models;
@model iTuinBook.Models.TareaOrdenar

@{
    ViewBag.Title = "VerTareaOrdenar";
    //Layout = "~/Views/Shared/_LayoutDocente.cshtml";
}

<h2>Ver Tarea Ordenar: @Model.Nombre</h2>
<hr />

<b>Tipo de prueba:</b> @switch ((int)Model.Tipo)
                       {
                           case 0:
                               @: Palabras
                               break;
                           case 1:
                               @: Frases
                               break;
                           case 2:
                               @: Imágenes
                               break;
                           default:
                               @: Indefinido
                               break;
                       }

<br />
<br />

@{
    string div, drag;
    int i = 0;

    switch ((int)Model.Tipo)
    {
        case 0:
        <div>
            @{
            foreach (Items item in Model.ItemsOrdenados)
            {
                div = "div" + i.ToString();
                drag = "drag" + i.ToString();
                
                <div id="@div" style="text-align:center; min-width:24px; min-height:24px; display:inline-block; border: 1px solid #aaaaaa; padding-left: 3px; padding-right: 3px;" ondrop="drop(event)" ondragover="allowDrop(event)">
                    <label id="@drag" draggable="true" ondragstart="drag(event)">@item.Item</label>
                </div>
                
                i++;
            }
            
            <hr />
            <br />
            for (int j = 0; j < i; j++)
            {
                div = "res" + j.ToString();
                
                <div id="@div" style="text-align:center; min-width:24px; min-height:24px; display:inline-block; border: 1px solid #aaaaaa; padding-left: 3px; padding-right: 3px;" ondrop="drop(event)" ondragover="allowDrop(event)">

                </div> 
            }
        }    
        </div>
            break;
        case 1:
        <div>
            @{
            foreach (Items item in Model.ItemsOrdenados)
            {
                div = "div" + i.ToString();
                drag = "drag" + i.ToString();
                
                <div id="@div" style="height: 24px; border: 1px solid #aaaaaa;" ondrop="drop(event)" ondragover="allowDrop(event)">
                    <label id="@drag" draggable="true" ondragstart="drag(event)">@item.Item</label>
                </div>  <br />
                
                i++;
            }
            
            <hr />
            <br />
            for (int j = 0; j < i; j++)
            {
                div = "res" + j.ToString();
                
                <div id="@div" style="height: 24px; border: 1px solid #aaaaaa;" ondrop="drop(event)" ondragover="allowDrop(event)">

                </div> <br />
            }
        }    
        </div>

            break;

        case 2:
        <div>
        @{
            foreach (Items item in Model.ItemsOrdenados)
            {
                div = "div" + i.ToString();
                drag = "drag" + i.ToString();
            
                <div id="@div" style="width: 150px; height: 150px; border: 1px solid #aaaaaa; display: inline-block;" ondrop="drop(event)" ondragover="allowDrop(event)">
                    <img id="@drag" src="@item.Item" draggable="true" ondragstart="drag(event)" width="150" height="150" />

                </div>  
            
                i++;
            }

            <hr />
            <br />
            for (int j = 0; j < i; j++)
            {
                div = "res" + j.ToString();
                
                <div id="@div" style="width: 150px; height: 150px; border: 1px solid #aaaaaa; display: inline-block;" ondrop="drop(event)" ondragover="allowDrop(event)">
                </div>
            }
        }        
        </div>
            break;
        default:
        <b>La tarea no se pudo cargar por falta de tipo.</b>
            break;
    }
}
<br />
<div>
    @Html.ActionLink("Volver", "AdministrarTexto", new { TextoID = Model.TextoID })
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
     
    <script src="~/Content/KendoUI/js/kendo.web.min.js"></script>
    
    <link href="~/Content/KendoUI/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="~/Content/KendoUI/styles/kendo.default.min.css" rel="stylesheet" />
    <link href="~/Content/KendoUI/styles/kendo.all.min.js" rel="stylesheet" />
    
    <script type="text/javascript">
        function allowDrop(ev) {
            ev.preventDefault();
        }

        function drag(ev) {
            ev.dataTransfer.setData("Parent", document.getElementById(ev.target.id).parentNode.id);

            ev.dataTransfer.setData("Text", ev.target.id);
        }

        function drop(ev) {            
            ev.preventDefault();
            var data = ev.dataTransfer.getData("Text");

            if (ev.target.id.length == 5) { // Ya contiene una imagen
                var parent = ev.dataTransfer.getData("Parent"); // Origen

                var reemplazo = ev.target.id; // Viejodisplay

                document.getElementById(reemplazo).parentNode.appendChild(document.getElementById(data));

                document.getElementById(parent).appendChild(document.getElementById(reemplazo))
            }
            else {
                ev.target.appendChild(document.getElementById(data));
            }
        }

        $(document).ready(function () {
            

            $("#menuCategorias").kendoMenu({
                orientation: "vertical"
            }).css({
                width: auto,
                marginRight: "220px"
            });
        });
    </script>
}