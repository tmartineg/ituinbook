@using ReadAndLearn.Models;
@model ReadAndLearn.Models.Pregunta
@using System.Text.RegularExpressions;

@{
    ViewBag.Title = "PL6_Pregunta";
    Layout = "~/Views/Shared/_LayoutNada.cshtml";
    DatosUsuario du = (DatosUsuario)ViewBag.DatosUsuario;
    DatoSimple ds = (DatoSimple)ViewBag.DatoSimple;
    DatoSimple dsel = (DatoSimple)ViewBag.Seleccion;
    ConfigModulo configModulo = (ConfigModulo)ViewBag.ConfigModulo;
    ConfigPregunta configPregunta = (ConfigPregunta)ViewBag.ConfigPregunta;
    bool flag_Flota = (bool)ViewBag.AyudaFlota;
    Regex regex = new Regex(string.Format("\\{0}.*?\\{1}", '<', '>'));
}

<div style="margin: 15px 20px;" id="areaPregunta">
    

    <div id=enunciado style="padding-left: 20px; padding-right: 20px;" class="largerFont">
        @Html.Raw(Model.Enunciado)      
    </div>
     
    <div id=alternativas style="padding-left: 20px; padding-right: 20px;" class="largerFont">
        <ul>
            @if (configPregunta != null && configPregunta.MarcarCorrecto)
            {
                foreach (Alternativa alt in Model.Alternativas)
                {
                    if (configPregunta.SeñalarClaves && (alt.Valor || alt.Opcion == ds.Info)) { 
                        if (alt.Valor)
                        {
                            <img src="~/Content/tick.png" style="width: 15px; height: 15px;  margin-left: -19px;" />   
                        }
                        else
                        {
                            <img src="~/Content/aspa.png" style="width: 15px; height: 15px;  margin-left: -19px;" />
                        }

                        if (alt.Opcion != null)
                        {
                            if (alt.Opcion == ds.Info)
                            { 
                                @Html.RadioButtonFor(r => alt, alt.Opcion, new { @style = "width:20px", @checked = "checked", disabled = "disabled" }) @alt.Opcion <br />
                            }
                            else
                            {
                                @Html.RadioButtonFor(r => alt, alt.Opcion, new { @style = "width:20px", disabled = "disabled" }) @alt.Opcion <br />
                            }
                        }
                        else
                        {
                            if (alt.Opcion == ds.Info)
                            { 
                                @Html.RadioButtonFor(r => alt, "null", new { @style = "width:20px", @checked = "checked", disabled = "disabled" }) @alt.Opcion <br />
                            }
                            else
                            {
                                @Html.RadioButtonFor(r => alt, "null", new { @style = "width:20px", disabled = "disabled" }) @alt.Opcion <br />
                            }
                        }
                    }
                }
            }
            else
            {
                foreach (Alternativa alt in Model.Alternativas)
                {
                    if (configPregunta.SeñalarClaves && (alt.Valor || alt.Opcion == ds.Info)) { 
                        if (alt.Opcion != null)
                        {
                            if (alt.Opcion == ds.Info)
                            { 
                                @Html.RadioButtonFor(r => alt, alt.Opcion, new { @style = "width:20px", @checked = "checked", disabled = "disabled" }) @alt.Opcion <br />
                            }
                            else
                            {
                                @Html.RadioButtonFor(r => alt, alt.Opcion, new { @style = "width:20px", disabled = "disabled" }) @alt.Opcion <br />
                            }
                        }
                        else
                        {
                            if (alt.Opcion == ds.Info)
                            { 
                                @Html.RadioButtonFor(r => alt, "null", new { @style = "width:20px", @checked = "checked", disabled = "disabled" }) @alt.Opcion <br />
                            }
                            else
                            {
                                @Html.RadioButtonFor(r => alt, "null", new { @style = "width:20px", disabled = "disabled" }) @alt.Opcion <br />
                            }
                        }
                    }
                    
                }
            }
        </ul>
    </div>
    
    @if (ViewBag.TareaSel)
    {
        if(configPregunta != null && configPregunta.CorregirSeleccion)
        {
            <div style="padding-left: 20px; padding-right: 20px;">
                <b>Selección:</b>
                <p style="color:red;">@Html.Raw(dsel.Info2)</p>            
            </div>
        }
        else
        {
            <div style="padding-left: 20px; padding-right: 20px;">
                <b>Selección:</b>
                <p>@Html.Raw(regex.Replace(dsel.Info2, string.Empty))</p>            
            </div>
        }
    }

    <div id="fdbkDialog" class="hiddenDebug largerFont">
        @ViewBag.feedbackText
    </div>
    <reg id="explicacion" rlsection="explicacion" rlpregunta="@Model.Orden">
        <div id="explicacionDialog" class="hiddenDebug largerFont" style="padding-left: 20px; padding-right: 20px; padding-bottom: 20px;">
            @ViewBag.explicacionText
        </div>
    </reg>

    <div style="padding-left: 20px; padding-right: 20px; padding-bottom: 20px;">
        <button id="btnVerExplicacion">Ver explicación</button>                       
        <button id="btnSiguientePregunta" disabled="disabled">Siguiente</button>                       
    </div> 
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {


            


            var timeStart = new Date();
            var timeFinish = new Date();

            @if (configPregunta != null && configPregunta.EnmascararTextoRevisa)
            {
                <text>
            //parent.BlurRevision("True");            
            window.parent.$('.paginas').css("-webkit-filter", "blur(5px)");
            window.parent.$('.paginas').css("filter", "url(#example-one)");                
            </text>
            }
            else
            {
                <text>
            //parent.BlurRevision("False");
            window.parent.$('.paginas').css("-webkit-filter", "");
            window.parent.$('.paginas').css("filter", "");                
            </text>
            }

            /*show feedback on dialog*/
            var dialog = $("#fdbkDialog");
            $("#btnVerExplicacion").click(function () {
                $("#enunciado").removeClass("no_difuminado").addClass("difuminado");
                $("#alternativas").removeClass("no_difuminado").addClass("difuminado");
                $("#explicacion").removeClass("difuminado").addClass("no_difuminado");
                $("#btnSiguientePregunta").removeAttr("disabled");
                $(this).addClass("hiddenDebug");
                $("#explicacionDialog").removeClass("hiddenDebug").addClass("backgroundVerde");
                
                //DatoSimple lectura explicacion
                    //guirisan/issue https://github.com/guirisan/ituinbook/issues/60
                    //generamos el datosimple de que se ha empezado a leer la explicacion
                    //guirisan/secuencias
                    //datetime set in client
                    var datetimeclient = new Date().toISOString();

                    //NUMACC

                    //get and add+1 numAcc
                    var numAcc = parseInt(sessionStorage.getItem("numAccion"));
                    numAcc++;
                    sessionStorage.setItem("numAccion", numAcc);

                    //DATOSRAW
                    //get datosRaw to add row in ajax.beforeSend
                    var datosRaw;
                    if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                        datosRaw = {};
                    }


                    // cambio de CodeOP para lectura de explicacion
                    $.ajax({
                        url: "RegistrarAccion",
                        type: 'POST',
                        data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@du.ModuloID', TextoID: '@Model.Texto.TextoID', PreguntaID: '@Model.PreguntaID', CodeOP: 133, moment: datetimeclient, numAccion: numAcc },
                        //guirisan/secuencias
                        beforeSend: function () {
                            //set datosRaw on sessionStorage
                            var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                            datosRaw[numAcc] = cadena;
                            sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                            //set datosRaw on ajax petition
                            this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                        },
                        error: function () {
                            //alert("Error: Hubo un error con tu última acción. Codeop:128");
                        }
                    });

            });











            //guirisan/issues https://github.com/guirisan/ituinbook/issues/146
            //añadimos el false al IF para no ejecutar nada de dialogs, 
            //pero conservamos el código en la página por si acaso
            if (false && $.trim(dialog.html()) != "") {

                //guirisan/issue https://github.com/guirisan/ituinbook/issues/36
                //generamos el datosimple de que se ha empezado a leer el feedback
                //guirisan/secuencias
                //datetime set in client
                var datetimeclient = new Date().toISOString();

                //NUMACC

                //get and add+1 numAcc
                var numAcc = parseInt(sessionStorage.getItem("numAccion"));
                numAcc++;
                sessionStorage.setItem("numAccion", numAcc);

                //DATOSRAW
                //get datosRaw to add row in ajax.beforeSend
                var datosRaw;
                if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                    datosRaw = {};
                }

                //guirisan/issues https://github.com/guirisan/ituinbook/issues/40
                // cambio de CodeOP para lectura de fdbk
                $.ajax({
                    url: "RegistrarAccion",
                    type: 'POST',
                    data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@du.ModuloID', TextoID: '@Model.Texto.TextoID', PreguntaID: '@Model.PreguntaID', CodeOP: 128, moment: datetimeclient, numAccion: numAcc },
                    //guirisan/secuencias
                    beforeSend: function () {
                        //set datosRaw on sessionStorage
                        var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                        datosRaw[numAcc] = cadena;
                        sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                        //set datosRaw on ajax petition
                        this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                    },
                    error: function () {
                        //alert("Error: Hubo un error con tu última acción. Codeop:128");
                    }
                });

                dialog.dialog({
                    modal: true,
                    dialogClass: "noclose",
                    buttons: [
                        {
                            text: "Ver explicación",
                            click: function () {

                                var datetimeclient = new Date().toISOString();

                                //NUMACC
                                //get and add+1 numAcc
                                var numAcc = parseInt(sessionStorage.getItem("numAccion"));
                                numAcc++;
                                sessionStorage.setItem("numAccion", numAcc);

                                //DATOSRAW
                                //get datosRaw to add row in ajax.beforeSend
                                var datosRaw;
                                if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                                    datosRaw = {};
                                }

                                //guirisan/issues https://github.com/guirisan/ituinbook/issues/40
                                // cambio de CodeOP para lectura de fdbk 
                                $.ajax({
                                    url: "RegistrarAccion",
                                    type: 'POST',
                                    data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@du.ModuloID', TextoID: '@Model.Texto.TextoID', PreguntaID: '@Model.PreguntaID', CodeOP: 129, moment: datetimeclient, numAccion: numAcc },
                                    //guirisan/secuencias
                                    beforeSend: function () {
                                        //set datosRaw on sessionStorage
                                        var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                                        datosRaw[numAcc] = cadena;
                                        sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                                        //set datosRaw on ajax petition
                                        this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                                    },
                                    error: function () {
                                        alert("Error: Hubo un error con tu última acción.");
                                    }
                                });

                                $(this).dialog("close");
                                /***********************************************************************************************/
                                /***********************************************************************************************/
                                /***********************************************************************************************/
                                //guirisan/issues https://github.com/guirisan/ituinbook/issues/60


                                /*show feedback on dialog*/
                                var expDialog = $("#explicacionDialog");
                                expDialog.removeClass("hiddenDebug");
                                if ($.trim(expDialog.html()) != "") {

                                    
                                    expDialog.dialog({
                                        modal: true,
                                        dialogClass: "noclose",
                                        buttons: [
                                            {
                                                text: "Cerrar",
                                                click: function () {

                                                    var datetimeclient = new Date().toISOString();

                                                    //NUMACC
                                                    //get and add+1 numAcc
                                                    var numAcc = parseInt(sessionStorage.getItem("numAccion"));
                                                    numAcc++;
                                                    sessionStorage.setItem("numAccion", numAcc);

                                                    //DATOSRAW
                                                    //get datosRaw to add row in ajax.beforeSend
                                                    var datosRaw;
                                                    if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                                                        datosRaw = {};
                                                    }

                                                    
                                                    // cambio de CodeOP para lectura de explicacion
                                                    $.ajax({
                                                        url: "RegistrarAccion",
                                                        type: 'POST',
                                                        data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@du.ModuloID', TextoID: '@Model.Texto.TextoID', PreguntaID: '@Model.PreguntaID', CodeOP: 134, moment: datetimeclient, numAccion: numAcc },
                                                        //guirisan/secuencias
                                                        beforeSend: function () {
                                                            //set datosRaw on sessionStorage
                                                            var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                                                            datosRaw[numAcc] = cadena;
                                                            sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                                                            //set datosRaw on ajax petition
                                                            this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                                                        },
                                                        error: function () {
                                                            alert("Error: Hubo un error con tu última acción.");
                                                        }
                                                    });

                                                    $(this).dialog("close");


                                                    //return false;
                                                }
                                            }]
                                    });
                                }

                                /***********************************************************************************************/
                                /***********************************************************************************************/
                                /***********************************************************************************************/
                                /***********************************************************************************************/

                                //return false;
                            }
                        },
                        {   text: "Cerrar",
                            click: function () {
                                var datetimeclient = new Date().toISOString();

                                //NUMACC
                                //get and add+1 numAcc
                                var numAcc = parseInt(sessionStorage.getItem("numAccion"));
                                numAcc++;
                                sessionStorage.setItem("numAccion", numAcc);

                                //DATOSRAW
                                //get datosRaw to add row in ajax.beforeSend
                                var datosRaw;
                                if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                                    datosRaw = {};
                                }

                                //guirisan/issues https://github.com/guirisan/ituinbook/issues/40
                                // cambio de CodeOP para lectura de fdbk 
                                $.ajax({
                                    url: "RegistrarAccion",
                                    type: 'POST',
                                    data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@du.ModuloID', TextoID: '@Model.Texto.TextoID', PreguntaID: '@Model.PreguntaID', CodeOP: 129, moment: datetimeclient, numAccion: numAcc },
                                    //guirisan/secuencias
                                    beforeSend: function () {
                                        //set datosRaw on sessionStorage
                                        var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                                        datosRaw[numAcc] = cadena;
                                        sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                                        //set datosRaw on ajax petition
                                        this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                                    },
                                    error: function () {
                                        alert("Error: Hubo un error con tu última acción.");
                                    }
                                });

                                $(this).dialog("close");
                        }
                    }
                    ]
                });
            }

            $("#btnSiguientePregunta").click(function () {
                $("#btnSiguientePregunta").attr("disabled", "disabled");

                //parent.FinalizarTiempoPregunta();
                //guirisan/secuencias
                //datetime set in client
                var datetimeclient = new Date().toISOString();

                //NUMACC

                //get and add+1 numAcc
                var numAcc = parseInt(sessionStorage.getItem("numAccion"));
                numAcc++;
                sessionStorage.setItem("numAccion", numAcc);

                //DATOSRAW
                //get datosRaw to add row in ajax.beforeSend
                var datosRaw;
                if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                    datosRaw = {};
                }

                ////
                $.ajax({
                    url: "PL6_Siguiente_Pregunta", //url: 'Validar',
                    type: 'POST',
                    data: { GrupoID: '@du.GrupoID', ModuloID: '@du.ModuloID', PreguntaID: '@Model.PreguntaID', TextoID: '@du.TextoID', moment: datetimeclient, numAccion: numAcc },
                    //guirisan/secuencias
                    beforeSend: function () {
                        //set datosRaw on sessionStorage
                        var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                        datosRaw[numAcc] = cadena;
                        sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                        //set datosRaw on ajax petition
                        this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                    },
                    success: function (result) {

                        if (result.Parent) {
                            // data.redirect contains the string URL to redirect to
                            window.parent.window.location.href = result.redirect;
                        }
                        else {
                            // data.redirect contains the string URL to redirect to
                            window.location.href = result.redirect;
                        }

                    },
                    error: function () {
                        alert("Error en la petición al servidor");
                    }
                });
                ////
               
                return false;
            });


            $('#explicacion').click(function () {
                if ($('#explicacion').hasClass("difuminado")) {
                    $('#explicacion').removeClass("difuminado").addClass("no_difuminado");
                    $("#enunciado").removeClass("no_difuminado").addClass("difuminado");
                    $("#alternativas").removeClass("no_difuminado").addClass("difuminado");

                    //guirisan/secuencias
                    //datetime set in client
                    var datetimeclient = new Date().toISOString();

                    //NUMACC

                    //get and add+1 numAcc
                    var numAcc = parseInt(sessionStorage.getItem("numAccion"));
                    numAcc++;
                    sessionStorage.setItem("numAccion", numAcc);

                    //DATOSRAW
                    //get datosRaw to add row in ajax.beforeSend
                    var datosRaw;
                    if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                        datosRaw = {};
                    }
                    $.ajax({
                        url: "RegistrarAccion",
                        type: 'POST',
                        data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@configModulo.ModuloID', TextoID: '@Model.Texto.TextoID', PreguntaID: '@Model.PreguntaID', CodeOP: 92, Param: "explicacion", ParamInt: '@Model.Orden', moment: datetimeclient, numAccion: numAcc },
                        //guirisan/secuencias
                        beforeSend: function () {
                            //set datosRaw on sessionStorage
                            var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                            datosRaw[numAcc] = cadena;
                            sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                            //set datosRaw on ajax petition
                            this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                        },
                        error: function () {
                            alert("Error: Hubo un error con tu última acción.");
                        }
                    });

                }
            });



            /**************************************/
            /**************************************/
            /******* CONFIGURACIÓN PREGUNTA *******/
            /**************************************/
            /**************************************/
            if ('@configPregunta.EnmascararEnunciadoRevision' == 'True') {
                $('#enunciado').addClass("difuminado");

                $('#enunciado').click(function () {
                    if ($('#enunciado').hasClass("difuminado")) {
                        $('#enunciado').removeClass("difuminado").addClass("no_difuminado");
                        $("#explicacion").removeClass("no_difuminado").addClass("difuminado");

                        //guirisan/secuencias
                        //datetime set in client
                        var datetimeclient = new Date().toISOString();

                        //NUMACC

                        //get and add+1 numAcc
                        var numAcc = parseInt(sessionStorage.getItem("numAccion"));
                        numAcc++;
                        sessionStorage.setItem("numAccion", numAcc);

                        //DATOSRAW
                        //get datosRaw to add row in ajax.beforeSend
                        var datosRaw;
                        if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                            datosRaw = {};
                        }
                        $.ajax({
                            url: "RegistrarAccion",
                            type: 'POST',
                            data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@configModulo.ModuloID', TextoID: '@Model.Texto.TextoID', PreguntaID: '@Model.PreguntaID', CodeOP: 92, Param: "enunciado", ParamInt: '@Model.Orden', moment: datetimeclient, numAccion: numAcc },
                            //guirisan/secuencias
                            beforeSend: function () {
                                //set datosRaw on sessionStorage
                                var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                                datosRaw[numAcc] = cadena;
                                sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                                //set datosRaw on ajax petition
                                this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                            },
                            error: function () {
                                alert("Error: Hubo un error con tu última acción.");
                            }
                        });


                        @if (configPregunta != null && configPregunta.EnmascararTextoRevisa)
                        {
                            <text>
                        window.parent.$('.paginas').css("-webkit-filter", "blur(5px)");
                        window.parent.$('.paginas').css("filter", "url(#example-one)");
                            </text>
                        }
                        else
                        {
                            <text>
                        window.parent.$('.paginas').css("-webkit-filter", "");
                        window.parent.$('.paginas').css("filter", "");
                            </text>
                        }

                        if ('@configPregunta.EnmascararAlternativasRevision' == 'True') {
                            if ($('#alternativas').hasClass("difuminado")) {

                            }
                            else {
                                $('#alternativas').removeClass("no_difuminado").addClass("difuminado");

                                
                            }

                        }
                    }
                });
            }

            if ('@configPregunta.EnmascararAlternativasRevision' == 'True') {
                $('#alternativas').addClass("difuminado");

                $('#alternativas').click(function () {
                    if ($('#alternativas').hasClass("difuminado")) {
                        $('#alternativas').removeClass("difuminado").addClass("no_difuminado");
                        $("#explicacion").removeClass("no_difuminado").addClass("difuminado");

                        //guirisan/secuencias
                        //datetime set in client
                        var datetimeclient = new Date().toISOString();

                        //NUMACC

                        //get and add+1 numAcc
                        var numAcc = parseInt(sessionStorage.getItem("numAccion"));
                        numAcc++;
                        sessionStorage.setItem("numAccion", numAcc);

                        //DATOSRAW
                        //get datosRaw to add row in ajax.beforeSend
                        var datosRaw;
                        if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                            datosRaw = {};
                        }
                        $.ajax({
                            url: "RegistrarAccion",
                            type: 'POST',
                            data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@configModulo.ModuloID', TextoID: '@Model.Texto.TextoID', PreguntaID: '@Model.PreguntaID', Dato01: '@Model.Orden', CodeOP: 92, Param: "alternativas", ParamInt: '@Model.Orden', moment: datetimeclient, numAccion: numAcc },
                            //guirisan/secuencias
                            beforeSend: function () {
                                //set datosRaw on sessionStorage
                                var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                                datosRaw[numAcc] = cadena;
                                sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                                //set datosRaw on ajax petition
                                this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                            },
                            error: function () {
                                alert("Error: Hubo un problema con tu última acción.");
                            }
                        });

                        @if (configPregunta != null && configPregunta.EnmascararTextoRevisa)
                        {
                            <text>
                        window.parent.$('.paginas').css("-webkit-filter", "blur(5px)");
                        window.parent.$('.paginas').css("filter", "url(#example-one)");
                            </text>
                        }
                        else
                        {
                            <text>
                        window.parent.$('.paginas').css("-webkit-filter", "");
                        window.parent.$('.paginas').css("filter", "");
                            </text>
                        }

                        if ('@configPregunta.EnmascararEnunciadoRevision' == 'True') {
                            if ($('#enunciado').hasClass("difuminado")) {

                            }
                            else {
                                $('#enunciado').removeClass("no_difuminado").addClass("difuminado");
                                
                                
                            }
                        }

                    }
                });
            }


        });

        function ClickPagina() {
            if ('@configPregunta.EnmascararEnunciadoRevision' == 'True') {
                $('#enunciado').removeClass("no_difuminado").addClass("difuminado");
            }

            if ('@configPregunta.EnmascararAlternativasRevision' == 'True') {
                $('#alternativas').removeClass("no_difuminado").addClass("difuminado");
            }
        }
    </script>
}