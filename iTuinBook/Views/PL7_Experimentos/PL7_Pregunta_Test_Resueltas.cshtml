@using ReadAndLearn.Models;
@model IEnumerable<ReadAndLearn.Models.Pregunta>
@using System.Text.RegularExpressions;

@{
    ViewBag.Title = "PL7_Pregunta";
    Layout = "~/Views/Shared/_LayoutNada.cshtml";
    DatosUsuario du = (DatosUsuario)ViewBag.DatosUsuario;
    //DatoSimple ds = (DatoSimple)ViewBag.DatoSimple;
    ConfigModulo configModulo = (ConfigModulo)ViewBag.ConfigModulo;
    Regex regex = new Regex(string.Format("\\{0}.*?\\{1}", '<', '>'));
    Pregunta[] preguntas = ViewBag.Preguntas;
    int i = 0;
}

<div style="margin: 15px 20px;" id="areaPregunta">
   @foreach (Pregunta preg in Model)
{
 
    DatoSimple ds = ViewBag.DatosSimples[i];
    i++;

    <div class="classPregunta">
        <reg rlpregunta="@preg.Orden" rlsection="enunciado">
            <div id=enunciado style="padding-left: 20px; padding-right: 20px;" class="largerFont">
                @Html.Raw(preg.Enunciado)

            </div>
        </reg>
        <reg rlpregunta="@preg.Orden" rlsection="alternativas">
            <div id=alternativas style="padding-left: 20px; padding-right: 20px;" class="largerFont">
                <ul>
                    @if (preg.ConfigPregunta != null && preg.ConfigPregunta.MarcarCorrecto)
                {

                    foreach (Alternativa alt in preg.Alternativas)
                    {

                        if (preg.ConfigPregunta.SeñalarClaves && (alt.Valor || alt.Opcion == ds.Info))
                        {
                            if (alt.Valor)
                            {
                                <img src="~/Content/tick.png" style="width: 15px; height: 15px;  margin-left: -19px;" />
                            }
                            else
                            {
                                <img src="~/Content/aspa.png" style="width: 15px; height: 15px;  margin-left: -19px;" />
                            }

                            if (alt.Opcion != null)
                            {
                                if (alt.Opcion == ds.Info)
                                {
                                    @Html.RadioButtonFor(r => alt, alt.Opcion, new { @Name = preg.PreguntaID, @style = "width:20px", @checked = "checked", disabled = "disabled" }) @alt.Opcion
                                    <br />
                                }
                                else
                                {
                                    @Html.RadioButtonFor(r => alt, alt.Opcion, new { @Name = preg.PreguntaID, @style = "width:20px", disabled = "disabled" }) @alt.Opcion
                                    <br />
                                }
                            }
                            else
                            {
                                if (alt.Opcion == ds.Info)
                                {
                                    @Html.RadioButtonFor(r => alt, "null", new { @Name = preg.PreguntaID, @style = "width:20px", @checked = "checked", disabled = "disabled" }) @alt.Opcion
                                    <br />
                                }
                                else
                                {
                                    @Html.RadioButtonFor(r => alt, "null", new { @Name = preg.PreguntaID, @style = "width:20px", disabled = "disabled" }) @alt.Opcion
                                    <br />
                                }
                            }
                        }
                    }
                }
                else
                {
                    foreach (Alternativa alt in preg.Alternativas)
                    {
                        //if (preg.ConfigPregunta.SeñalarClaves && (alt.Valor || alt.Opcion == ds.Info)) {
                        if (preg.ConfigPregunta.SeñalarClaves && (alt.Valor || alt.Opcion == ds.Info))
                        {
                            if (alt.Opcion != null)
                            {
                                if (alt.Opcion == ds.Info)
                                {
                                    @Html.RadioButtonFor(r => alt, alt.Opcion, new { @Name = preg.PreguntaID, @style = "width:20px", @checked = "checked", disabled = "disabled" }) @alt.Opcion
                                    <br />
                                }
                                else
                                {
                                    @Html.RadioButtonFor(r => alt, alt.Opcion, new { @Name = preg.PreguntaID, @style = "width:20px", disabled = "disabled" }) @alt.Opcion
                                    <br />
                                }
                            }
                            else
                            {
                                if (alt.Opcion == ds.Info)
                                {
                                    @Html.RadioButtonFor(r => alt, "null", new { @Name = preg.PreguntaID, @style = "width:20px", @checked = "checked", disabled = "disabled" }) @alt.Opcion
                                    <br />
                                }
                                else
                                {
                                    @Html.RadioButtonFor(r => alt, "null", new { @Name = preg.PreguntaID, @style = "width:20px", disabled = "disabled" }) @alt.Opcion
                                    <br />
                                }
                            }
                        }

                    }
                }
                </ul>
            </div>
        </reg>

        <div id="fdbkDialog" class="hiddenDebug largerFont">
            @ViewBag.feedbackText
        </div>

    
        @if (preg.Explicacion != null && preg.Explicacion != "")
    {

        <div style="padding-left: 20px; padding-right: 20px; padding-bottom: 20px;" class="largerFont">

            @{
        string btnId = "btnVerExplicacion" + preg.PreguntaID;
        string divId = "explicacionDialog" + preg.PreguntaID;
            }
            <button id="@btnId" preguntaid="@preg.PreguntaID">Ver explicación</button>
            <reg rlpregunta="@preg.Orden" rlsection="explicacion">
                <div id="@divId" class="hiddenDebug backgroundVerde" style="padding-left: 20px; padding-right: 20px; padding-bottom: 20px;">
                    @preg.Explicacion
                </div>
            </reg>
        </div>
    }
    </div> //end div.classPregunta
   } 
    
    
<div style="padding-left: 20px; padding-right: 20px; padding-bottom: 20px;">
        <button id="btnSiguientePregunta" disabled="disabled">Siguiente</button>

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            //guirisan/issues https://github.com/guirisan/ituinbook/issues/174
            $("reg").addClass("difuminado");

            $("reg").click(function () {
                $("reg").removeClass("no_difuminado").addClass("difuminado");
                $(this).removeClass("difuminado").addClass("no_difuminado");
                
                //get info about clicked region
                var rlsection = $(this).attr("rlsection");
                var rlpregunta = $(this).attr("rlpregunta");

                //guirisan/secuencias
                //datetime set in client
                var datetimeclient = new Date().toISOString();

                //NUMACC

                //get and add+1 numAcc
                var numAcc = parseInt(sessionStorage.getItem("numAccion"));
                numAcc++;
                sessionStorage.setItem("numAccion", numAcc);

                //DATOSRAW
                //get datosRaw to add row in ajax.beforeSend
                var datosRaw;
                if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                    datosRaw = {};
                }


                // cambio de CodeOP para lectura de explicacion
                $.ajax({
                    url: "RegistrarAccion",
                    type: 'POST',
                    data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', PreguntaID : 0, ModuloID: '@du.ModuloID', TextoID: '@Model.First().Texto.TextoID', Param: rlsection.toString(), ParamInt: rlpregunta.toString(), CodeOP: 92, moment: datetimeclient, numAccion: numAcc },
                    //guirisan/secuencias
                    beforeSend: function () {
                        //set datosRaw on sessionStorage
                        var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                        datosRaw[numAcc] = cadena;
                        sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                        //set datosRaw on ajax petition
                        this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                    },
                    error: function () {
                        //alert("Error: Hubo un error con tu última acción. Codeop:128");
                    }
                });
            });




        var timeStart = new Date();
        var timeFinish = new Date();


        /*show feedback on dialog*/
        var dialog = $("#fdbkDialog");
        $("[id^='btnVerExplicacion'").click(function () {
            //guirisan/issues https://github.com/guirisan/ituinbook/issues/174
            //difuminamos por si hubiese abierto algo antes de pulsar en "Ver explicacion"
            $("reg").removeClass("no_difuminado").addClass("difuminado");

            $(this).addClass("hiddenDebug").next().children("[id^='explicacionDialog']").removeClass("hiddenDebug");
            $(this).siblings("reg").removeClass("difuminado").addClass("no_difuminado");
            if ($("[id^='btnVerExplicacion'").not(".hiddenDebug").length == 0) {
                $('#btnSiguientePregunta').removeAttr("disabled");
            }

            //DatoSimple lectura explicacion
            //guirisan/issue https://github.com/guirisan/ituinbook/issues/60
            //generamos el datosimple de que se ha empezado a leer la explicacion
            //guirisan/secuencias
            //datetime set in client
            var datetimeclient = new Date().toISOString();

            //NUMACC

            //get and add+1 numAcc
            var numAcc = parseInt(sessionStorage.getItem("numAccion"));
            numAcc++;
            sessionStorage.setItem("numAccion", numAcc);

            //DATOSRAW
            //get datosRaw to add row in ajax.beforeSend
            var datosRaw;
            if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                datosRaw = {};
            }


            // cambio de CodeOP para lectura de explicacion
            $.ajax({
                url: "RegistrarAccion",
                type: 'POST',
                data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@du.ModuloID', TextoID: '@Model.First().Texto.TextoID', PreguntaID: $(this).attr("preguntaID"), CodeOP: 133, moment: datetimeclient, numAccion: numAcc },
                //guirisan/secuencias
                beforeSend: function () {
                    //set datosRaw on sessionStorage
                    var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                    datosRaw[numAcc] = cadena;
                    sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                    //set datosRaw on ajax petition
                    this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                },
                error: function () {
                    //alert("Error: Hubo un error con tu última acción. Codeop:128");
                }
            });

        });











        //guirisan/issues https://github.com/guirisan/ituinbook/issues/146
        //añadimos el false al IF para no ejecutar nada de dialogs,
        //pero conservamos el código en la página por si acaso
        if (false && $.trim(dialog.html()) != "") {

            //guirisan/issue https://github.com/guirisan/ituinbook/issues/36
            //generamos el datosimple de que se ha empezado a leer el feedback
            //guirisan/secuencias
            //datetime set in client
            var datetimeclient = new Date().toISOString();

            //NUMACC

            //get and add+1 numAcc
            var numAcc = parseInt(sessionStorage.getItem("numAccion"));
            numAcc++;
            sessionStorage.setItem("numAccion", numAcc);

            //DATOSRAW
            //get datosRaw to add row in ajax.beforeSend
            var datosRaw;
            if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                datosRaw = {};
            }

            //guirisan/issues https://github.com/guirisan/ituinbook/issues/40
            // cambio de CodeOP para lectura de fdbk
            $.ajax({
                url: "RegistrarAccion",
                type: 'POST',
                data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@du.ModuloID', TextoID: '@Model.First().Texto.TextoID', PreguntaID: '@Model.First().PreguntaID', CodeOP: 128, moment: datetimeclient, numAccion: numAcc },
                //guirisan/secuencias
                beforeSend: function () {
                    //set datosRaw on sessionStorage
                    var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                    datosRaw[numAcc] = cadena;
                    sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                    //set datosRaw on ajax petition
                    this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                },
                error: function () {
                    //alert("Error: Hubo un error con tu última acción. Codeop:128");
                }
            });

            dialog.dialog({
                modal: true,
                dialogClass: "noclose",
                buttons: [
                    {
                        text: "Ver explicación",
                        click: function () {

                            var datetimeclient = new Date().toISOString();

                            //NUMACC
                            //get and add+1 numAcc
                            var numAcc = parseInt(sessionStorage.getItem("numAccion"));
                            numAcc++;
                            sessionStorage.setItem("numAccion", numAcc);

                            //DATOSRAW
                            //get datosRaw to add row in ajax.beforeSend
                            var datosRaw;
                            if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                                datosRaw = {};
                            }

                            //guirisan/issues https://github.com/guirisan/ituinbook/issues/40
                            // cambio de CodeOP para lectura de fdbk
                            $.ajax({
                                url: "RegistrarAccion",
                                type: 'POST',
                                data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@du.ModuloID', TextoID: '@Model.First().Texto.TextoID', PreguntaID: '@Model.First().PreguntaID', CodeOP: 129, moment: datetimeclient, numAccion: numAcc },
                                //guirisan/secuencias
                                beforeSend: function () {
                                    //set datosRaw on sessionStorage
                                    var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                                    datosRaw[numAcc] = cadena;
                                    sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                                    //set datosRaw on ajax petition
                                    this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                                },
                                error: function () {
                                    alert("Error: Hubo un error con tu última acción.");
                                }
                            });

                            $(this).dialog("close");
                            /***********************************************************************************************/
                            /***********************************************************************************************/
                            /***********************************************************************************************/
                            //guirisan/issues https://github.com/guirisan/ituinbook/issues/60


                            /*show feedback on dialog*/
                            var expDialog = $("#explicacionDialog");
                            expDialog.removeClass("hiddenDebug");
                            if ($.trim(expDialog.html()) != "") {


                                expDialog.dialog({
                                    modal: true,
                                    dialogClass: "noclose",
                                    buttons: [
                                        {
                                            text: "Cerrar",
                                            click: function () {

                                                var datetimeclient = new Date().toISOString();

                                                //NUMACC
                                                //get and add+1 numAcc
                                                var numAcc = parseInt(sessionStorage.getItem("numAccion"));
                                                numAcc++;
                                                sessionStorage.setItem("numAccion", numAcc);

                                                //DATOSRAW
                                                //get datosRaw to add row in ajax.beforeSend
                                                var datosRaw;
                                                if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                                                    datosRaw = {};
                                                }


                                                // cambio de CodeOP para lectura de explicacion
                                                $.ajax({
                                                    url: "RegistrarAccion",
                                                    type: 'POST',
                                                    data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@du.ModuloID', TextoID: '@Model.First().Texto.TextoID', PreguntaID: '@Model.First().PreguntaID', CodeOP: 134, moment: datetimeclient, numAccion: numAcc },
                                                    //guirisan/secuencias
                                                    beforeSend: function () {
                                                        //set datosRaw on sessionStorage
                                                        var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                                                        datosRaw[numAcc] = cadena;
                                                        sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                                                        //set datosRaw on ajax petition
                                                        this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                                                    },
                                                    error: function () {
                                                        alert("Error: Hubo un error con tu última acción.");
                                                    }
                                                });

                                                $(this).dialog("close");


                                                //return false;
                                            }
                                        }]
                                });
                            }

                            /***********************************************************************************************/
                            /***********************************************************************************************/
                            /***********************************************************************************************/
                            /***********************************************************************************************/

                            //return false;
                        }
                    },
                    {
                        text: "Cerrar",
                        click: function () {
                            var datetimeclient = new Date().toISOString();

                            //NUMACC
                            //get and add+1 numAcc
                            var numAcc = parseInt(sessionStorage.getItem("numAccion"));
                            numAcc++;
                            sessionStorage.setItem("numAccion", numAcc);

                            //DATOSRAW
                            //get datosRaw to add row in ajax.beforeSend
                            var datosRaw;
                            if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                                datosRaw = {};
                            }

                            //guirisan/issues https://github.com/guirisan/ituinbook/issues/40
                            // cambio de CodeOP para lectura de fdbk
                            $.ajax({
                                url: "RegistrarAccion",
                                type: 'POST',
                                data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@du.ModuloID', TextoID: '@Model.First().Texto.TextoID', PreguntaID: '@Model.First().PreguntaID', CodeOP: 129, moment: datetimeclient, numAccion: numAcc },
                                //guirisan/secuencias
                                beforeSend: function () {
                                    //set datosRaw on sessionStorage
                                    var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                                    datosRaw[numAcc] = cadena;
                                    sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                                    //set datosRaw on ajax petition
                                    this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                                },
                                error: function () {
                                    alert("Error: Hubo un error con tu última acción.");
                                }
                            });

                            $(this).dialog("close");
                        }
                    }
                ]
            });
        }

        $("#btnSiguientePregunta").click(function () {
            $("#btnSiguientePregunta").attr("disabled", "disabled");

            //parent.FinalizarTiempoPregunta();
            //guirisan/secuencias
            //datetime set in client
            var datetimeclient = new Date().toISOString();

            //NUMACC

            //get and add+1 numAcc
            var numAcc = parseInt(sessionStorage.getItem("numAccion"));
            numAcc++;
            sessionStorage.setItem("numAccion", numAcc);

            //DATOSRAW
            //get datosRaw to add row in ajax.beforeSend
            var datosRaw;
            if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                datosRaw = {};
            }

            ////
            $.ajax({
                url: "PL7_Siguiente_Pregunta", //url: 'Validar',
                type: 'POST',
                data: { GrupoID: '@du.GrupoID', ModuloID: '@du.ModuloID', PreguntaID: '@Model.First().PreguntaID', TextoID: '@du.TextoID', moment: datetimeclient, numAccion: numAcc },
                //guirisan/secuencias
                beforeSend: function () {
                    //set datosRaw on sessionStorage
                    var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                    datosRaw[numAcc] = cadena;
                    sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                    //set datosRaw on ajax petition
                    this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                },
                success: function (result) {

                    if (result.Parent) {
                        // data.redirect contains the string URL to redirect to
                        window.parent.window.location.href = result.redirect;
                    }
                    else {
                        // data.redirect contains the string URL to redirect to
                        window.location.href = result.redirect;
                    }

                },
                error: function () {
                    alert("Error en la petición al servidor");
                }
            });
            ////

            return false;
        });



        /**************************************/
        /**************************************/
        /******* CONFIGURACIÓN PREGUNTA *******/
        /**************************************/
        /**************************************/
        


            /*** ELIMIMADO BLOQUE RESPONSABLE DE CONTROLAR EL ENMASCARAMIENTO***/
            /*** AHORA ESTÁ INMPLANTADO EN EL CÓDIGO ENMASCARAR SIEMPRE*********/


    });

    function ClickPagina() {
        if ('@Model.First().ConfigPregunta.EnmascararEnunciadoRevision' == 'True') {
            $('#enunciado').removeClass("no_difuminado").addClass("difuminado");
        }

        if ('@Model.First().ConfigPregunta.EnmascararAlternativasRevision' == 'True') {
            $('#alternativas').removeClass("no_difuminado").addClass("difuminado");
        }
    }
    </script>
}