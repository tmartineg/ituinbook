@using ReadAndLearn.Models;
@model ReadAndLearn.Models.Pregunta

@{
    ViewBag.Title = "PL0_Pregunta";
    Layout = "~/Views/Shared/_LayoutNada.cshtml";
    DatosUsuario du = (DatosUsuario)ViewBag.DatosUsuario;
    ConfigModulo configModulo = (ConfigModulo)ViewBag.ConfigModulo;
    ConfigPregunta configPregunta = (ConfigPregunta)ViewBag.ConfigPregunta;
    DatoSimple ds = (DatoSimple)ViewBag.Seleccion;
}

<div style="margin: 15px 20px;" id="areaPregunta">
    <div style="float:right;" class="hiddenDebug">
        <b>PUNTOS:</b>
        <span style="padding-left: 5px;" id="puntos">@du.Puntos</span>
    </div>
    <!-- ************************************************************ -->
    @{



        ASPNetSpell.Razor.SpellAsYouType mySpell = new ASPNetSpell.Razor.SpellAsYouType();
        mySpell.InstallationPath = ("/ReadAndLearn/Content/ASPNetSpellInclude");
        mySpell.FieldsToSpellCheck = "respuesta";
        mySpell.UserInterfaceLanguage = "es";
        mySpell.DictionaryLanguage = "Espanol";
        mySpell.CaseSensitive = false; //no corregir maYÚscUlas fuera del sitio
        mySpell.CheckGrammar = false;  //no corregir gramatica (palabras repetidas, mayuscula de frase...)
        mySpell.IgnoreAllCaps = true;  //ignorar palabras en mayúsculas
        mySpell.IgnoreNumeric = true;  //ignorar palabras que contengan números
        //mySpell.AddWordsToDictionary = new Enum ('2') ; //deshabilita la inserción en diccionario //puta mierda de opcion, no acepta 0-1-2 como parametros com o hace myspellbutton
        
        /*comentado por descartar corrección mediante popup 23/11/2016*/
        /*
        ASPNetSpell.Razor.SpellButton mySpellButton = new ASPNetSpell.Razor.SpellButton();
        mySpellButton.InstallationPath = ("/ReadAndLearn/Content/ASPNetSpellInclude");
        mySpellButton.UserInterfaceLanguage = "es";
        mySpellButton.FieldsToSpellCheck = "respuesta";
        mySpellButton.DictionaryLanguage = "Espanol";
        mySpellButton.ButtonType = 0;
        mySpellButton.ModalDialog = true;
        */
        
    }

        @{
            
            
            //utilizar en caso de rehabilitar el botón
            //Html.Raw(mySpellButton.getHtml())
        }

        
        
        
        <!-- ************************************************-->
        <div id="enunciado" style="padding-left: 20px; padding-right: 20px;">
            @Html.Raw(Model.Enunciado)
        </div>

        <div id="placeholder" style="padding-left: 20px; padding-right: 20px; color: rgba(160, 160, 160, 0.68);">
            <!-- keeps message 'Debes escribir al menos dos palabras-->
            Debes escribir al menos dos palabras
        </div>

        <div style="padding-left: 20px; padding-right: 20px;">
            <textarea id="respuesta" placeholder="Debes escribir al menos 2 palabras" cols="100" rows="10" ondragstart="return false;" ondrop="return false;"></textarea>
        </div>
        
       
        <div style="padding-left: 20px; padding-right: 20px;">
            @if (Model.Texto.ConfigTexto.Busqueda)
            {
                <button id="btnBackToTexto"><a href="PL0_Texto?GrupoID=@du.GrupoID&ModuloID=@du.ModuloID&textoActual=@du.TextoActual&primerIntento=true">Volver al texto</a></button>
            }
            <button disabled="disabled" id="btnValidarAbierta">Validar</button>
            
        </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    <!--render script for spell as you type-->
    @Html.Raw(mySpell.getHtml());

    <script type="text/javascript">

        $(document).ready(function () {

            //guirisan/issues https://github.com/guirisan/ituinbook/issues/186
            // add to <textarea> ondragstart="return false;" ondrop="return false;"
            $('textarea').bind('copy paste', function (e) {
                e.preventDefault();
            });
            
            var timeStart = new Date();
            var timeFinish = new Date();

            

            //guirisan/issues https://github.com/guirisan/ituinbook/issues/41
            //exige un mínimo de 5 palabras para activar el botón de validar
            /********************************************************
            $("textarea#respuesta").bind('input propertychange', function () {
                //capturamos el evento de cambio en el textarea,
                //si hay más de 5 palabras activamos el boton
                //sino lo desactivamos (por si despues de escribir más de 5 palabras ha borrado alguna)
                if (($.trim(this.value)).split(' ').length > 1) {
                    $("button#btnValidarAbierta").removeAttr("disabled")
                } else {
                    $("button#btnValidarAbierta").attr("disabled", "disabled");

                }
            });
            *******************************************************/

            //guirisan/issues https://github.com/guirisan/ituinbook/issues/120
            //al usar el as-you-type spellcheck se desactiva el textarea y ya no sirve
            //la comprobación de numero de palabras hecha arriba. hay que trabajar sobre div#respuesta__livespell_proxy.livespell_textarea
            var writeStart = false;
            $(document).on("keyup", function () {
                var respuesta = $("#respuesta___livespell_proxy");
                /* no se puede hacer un placeholder para el div#respuesta___livespell_proxy*/

                if (($.trim(respuesta.html())).split(' ').length > 1) {
                    $("button#btnValidarAbierta").removeAttr("disabled");
                    $("#placeholder").addClass("hiddenDebug");
                } else {
                    if (!writeStart) {
                        writeStart = true;
                        //primera pulsación de una tecla
                        console.log("pulsado!")
                        //guirisan/secuencias
                            //datetime set in client
                            var datetimeclient = new Date().toISOString();

                            //NUMACC

                            //get and add+1 numAcc
                            var numAcc = parseInt(sessionStorage.getItem("numAccion"));
                            numAcc++;
                            sessionStorage.setItem("numAccion", numAcc);

                            //DATOSRAW
                            //get datosRaw to add row in ajax.beforeSend
                            var datosRaw;
                            if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                                datosRaw = {};
                            }
                            $.ajax({
                                url: "RegistrarAccion",
                                type: 'POST',
                                data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@du.ModuloID', TextoID: '@Model.Texto.TextoID', PreguntaID: '@Model.PreguntaID', CodeOP: 80, moment: datetimeclient, numAccion: numAcc },
                                //guirisan/secuencias
                                beforeSend: function () {
                                    //set datosRaw on sessionStorage
                                    var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                                    datosRaw[numAcc] = cadena;
                                    sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                                    //set datosRaw on ajax petition
                                    this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                                }
                            });
                    }

                    $("button#btnValidarAbierta").attr("disabled", "disabled");
                    $("#placeholder").removeClass("hiddenDebug");

                }
            });






            $("#btnValidarAbierta").click(function () {
                $("#btnValidarAbierta").attr("disabled", "disabled");
                //guirisan: datetime set in client
                var datetimeclient = new Date().toISOString();

                //NUMACC

                //get and add+1 numAcc
                var numAcc = parseInt(sessionStorage.getItem("numAccion"));
                numAcc++;
                sessionStorage.setItem("numAccion", numAcc);

                //DATOSRAW
                //get datosRaw to add row in ajax.beforeSend
                var datosRaw;
                if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                    datosRaw = {};
                }

                $.ajax({
                    url: "PL0_Pregunta_Abierta_Validar", //url: 'Validar',
                    type: 'POST',
                    data: { GrupoID: '@du.GrupoID', ModuloID: '@du.ModuloID', PreguntaID: '@Model.PreguntaID', respuesta: $('textarea#respuesta').val(), moment: datetimeclient },
                    success: function (result) {


                        /*DESCOMENTAR ESTO PARA NO SALTAR DIRECTAMENTE A LA SIGUIENTE PREGUNTA*/
                        // result.redirect contains the string URL to redirect to
                        //window.location.href = result.redirect;


                        //guirisan/issues https://github.com/guirisan/ituinbook/issues/39
                        //despues de validar la pregunta y generar en el servidor el datosimple adecuado,
                        //llamamos para cargar la siguiente pregunta sin pasar por la página PL0_Pregunta_Abierta_Resuelkta

                        //DATOSRAW
                        //get datosRaw to add row in ajax.beforeSend
                        var datosRaw;
                        if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                            datosRaw = {};
                        }

                        $.ajax({
                            url: "PL0_Siguiente_Pregunta", //url: 'Validar',
                            type: 'POST',
                            data: { GrupoID: '@du.GrupoID', ModuloID: '@du.ModuloID', PreguntaID: '@Model.PreguntaID', TextoID: '@du.TextoID', moment: datetimeclient, numAccion: numAcc },
                            //guirisan/secuencias
                            beforeSend: function () {
                                //set datosRaw on sessionStorage
                                var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                                datosRaw[numAcc] = cadena;
                                sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                                //set datosRaw on ajax petition
                                this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                            },
                            success: function (result) {
                                $('.paginas', window.parent.document).each(function () {
                                    $(this).html($(this).html().replace(/<lupa style=\"background-color:yellow;\">/g, ""));
                                    $(this).html($(this).html().replace(/<\/lupa>/g, ""));
                                    $(this).html($(this).html().replace(/<prismaticos style=\"border:1px solid red;\">/g, ""));
                                    $(this).html($(this).html().replace(/<\/prismaticos>/g, ""));
                                });

                                window.parent.$('.paginas').css("-webkit-filter", "blur(5px)");
                                window.parent.$('.paginas').css("filter", "url(#example-one)");

                                window.parent.$('#feedback').css("visibility", "hidden");
                                window.parent.$('#fdbkSMS').text("");

                                if (result.Parent) {
                                    // data.redirect contains the string URL to redirect to
                                    window.parent.window.location.href = result.redirect;
                                }
                                else {
                                    // data.redirect contains the string URL to redirect to
                                    window.location.href = result.redirect;
                                }

                            },
                            error: function () {
                                alert("error");
                            }
                        });




                    },
                    error: function () {
                        alert("error");
                    }
                });
            });

            /**************/
            /*** AYUDAS ***/
            /**************/
            @if (Model.Ayuda != null)
            {
                if (Model.Ayuda.ParafraseoN1 != null)
                {
                    <text>
            $('#btnFlotador').click(function () {
                $("#btnFlotador").attr("disabled", "disabled");
                //guirisan: datetime set in client
                var datetimeclient = new Date();
                datetimeclient = datetimeclient.toISOString();

                $.ajax({
                    url: "RegistrarAccion",
                    type: 'POST',
                    data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@configModulo.ModuloID', TextoID: '@Model.Texto.TextoID', PreguntaID: '@Model.PreguntaID', CodeOP: 120, moment: datetimeclient },
                    error: function () {
                        alert("Error: Hubo un error con tu última acción.");
                    }
                });
                /*$.ajax({
                    url: "PL0_Experimentos/UsoAyudasIndependiente",
                    type: 'POST',
                    data: { Ayuda: 1 }
                });*/

                $('#ayuFlotador').show();

                parent.autofitIframe(parent.document.getElementById("addIframe"));
            });
            </text>
                }

                if (Model.Ayuda.Lupa != null)
                {
                    <text>
            $("#btnLupa").click(function () {
                $("#btnLupa").attr("disabled", "disabled");
                //guirisan: datetime set in client
                var datetimeclient = new Date();
                datetimeclient = datetimeclient.toISOString();

                $.ajax({
                    url: "RegistrarAccion",
                    type: 'POST',
                    data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@configModulo.ModuloID', TextoID: '@Model.Texto.TextoID', PreguntaID: '@Model.PreguntaID', CodeOP: 122, moment: datetimeclient },
                    error: function () {
                        alert("Error: Hubo un error con tu última acción.");
                    }
                });

                var array = '@Html.Raw(@Model.Ayuda.Lupa)'.split('+');

                $('.paginas', window.parent.document).each(function () {
                    var param = '@Html.Raw(@Model.Ayuda.Lupa)'.split('/');

                    for (var i = 0; i < param.length; i++) {
                        $(this).html($(this).html().replace(param[i], "<lupa style=\"background-color:yellow;\">" + param[i] + "</lupa>"));
                    }
                });
            });
            </text>
                }

                if (Model.Ayuda.Prismaticos != null)
                {
                    <text>
            $('#btnPrismaticos').click(function () {
                $("#btnPrismaticos").attr("disabled", "disabled");
                //guirisan: datetime set in client
                var datetimeclient = new Date();
                datetimeclient = datetimeclient.toISOString();

                $.ajax({
                    url: "RegistrarAccion",
                    type: 'POST',
                    data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@configModulo.ModuloID', TextoID: '@Model.Texto.TextoID', PreguntaID: '@Model.PreguntaID', CodeOP: 121, moment: datetimeclient },
                    error: function () {
                        alert("Error: Hubo un error con tu última acción.");
                    }
                });

                $('.paginas', window.parent.document).each(function () {
                    var param = '@Html.Raw(@Model.Ayuda.Prismaticos)'.split('/');

                    for (var i = 0; i < param.length; i++) {
                        $(this).html($(this).html().replace(param[i], "<prismaticos style=\"border:1px solid red;\">" + param[i] + "</prismaticos>"));
                    }
                });
            });
            </text>
                }
            }
            /**************************************/
            /**************************************/
            /******* CONFIGURACIÓN PREGUNTA *******/
            /**************************************/
            /**************************************/
            @if(configPregunta != null)
            {
                <text>
            if ('@configPregunta.EnmascararEnunciado' == 'True') {
                $('#enunciado').addClass("difuminado");

                $('#enunciado').click(function () {
                    if ($('#enunciado').hasClass("difuminado")) {


                        //guirisan/secuencias
                        //datetime set in client
                        var datetimeclient = new Date().toISOString();

                        //NUMACC

                        //get and add+1 numAcc
                        var numAcc = parseInt(sessionStorage.getItem("numAccion"));
                        numAcc++;
                        sessionStorage.setItem("numAccion", numAcc);

                        //DATOSRAW
                        //get datosRaw to add row in ajax.beforeSend
                        var datosRaw;
                        if ((datosRaw = JSON.parse(sessionStorage.getItem("datosRaw"))) == null) {
                            datosRaw = {};
                        }

                        $.ajax({
                            url: "RegistrarAccion",
                            type: 'POST',
                            data: { DatosUsuarioID: '@du.DatosUsuarioID', GrupoID: '@du.GrupoID', ModuloID: '@du.ModuloID', TextoID: '@Model.Texto.TextoID', PreguntaID: '@Model.PreguntaID', CodeOP: 16, moment: datetimeclient, numAccion: numAcc },
                            //guirisan/secuencias
                            beforeSend: function () {
                                //set datosRaw on sessionStorage
                                var cadena = "url:[" + this.url + "]__data:[" + this.data.replace(/&/g, "_") + "]";
                                datosRaw[numAcc] = cadena;
                                sessionStorage.setItem("datosRaw", JSON.stringify(datosRaw));

                                //set datosRaw on ajax petition
                                this.data = this.data + "&dataRow=" + numAcc + "__" + cadena;
                            },
                            error: function () {
                                alert("Error: Hubo un error con tu última acción.");
                            }
                        });

                        $('#enunciado').removeClass("difuminado").addClass("no_difuminado");


                        timeStart = jQuery.now();
                    }
                });
            }


            </text>
            }

            @if (configPregunta != null && configModulo.Ayudas)
            {
                @: $('#ayudas').show();
                            @: $('#ayudas').css("visibility", "visible")
                        }
            else
            {
                if (configPregunta != null && configPregunta.Ayuda)
                {
                    @: $('#ayudas').show();
                                @: $('#ayudas').css("visibility", "visible")
                            }
                else
                {
                    @: $('#ayudas').hide();
                                @: $('#ayudas').css("visibility", "hidden")
                            }
            }

            $(":radio").change(function () {
                $("#btnValidarTest").removeAttr("disabled");
            });

            $("#btnValidarTest").attr("disabled", "disabled");

            /**************************************/
            /**************************************/


        });

    </script>
}
